################################################################################

#Bean生命周期五步
  *第一步 实例化Bean
  *第二步 Bean属性赋值
  *第三步 初始化Bean
  *第四步 使用Bean
  *第五步 销毁Bean

  // set注入 调用无参构造实例化Bean 使用set方法给Bean属性赋值
  // 构造注入 调用有参构造实例化Bean并赋值

#Bean生命周期七步
  * 实例化Bean
  * Bean属性赋值
  ** 执行Bean后处理器的Before方法
  * 初始化Bean
  ** 执行Bean后处理器的After方法
  * 使用Bean
  * 销毁Bean

  // bean后处理器作用于整个xml文件

#Bean生命周期十步
  * 实例化Bean
  * Bean属性赋值
  ** 执行Bean后处理器的Before方法
  * 初始化Bean
  ** 执行Bean后处理器的After方法
  * 使用Bean
  * 销毁Bean


  //  Spring容器只对singleton(单例)的Bean进行完整的声明周期管理
  //  如果是prototype(多例)作用域的Bean,spring容器只负责将Bean初始化完毕
  //  Bean初始化完毕之后，Spring容器就不再管了Bean的生命周期了
  //  也就是不会调用Bean的destroy()的方法
