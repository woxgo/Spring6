# OCP开闭原则
    * 什么是OCP开闭原则
        OCP是软件开发七大原则当中最基本的原则(开闭原则)
        对扩展开放
        对修改关闭
    * OCP原则是最核心最基本的...其他6个原则都是为OCP开闭原则服务的
    * OCP开闭原则的核心是什么
        在扩展系统功能的时候，没有修改以前写好的代码;那么就是符合OCP原则的
        反之，如果在扩展系统功能的时候，修改了以前的代码，那么这个设计就是失败的，违背了OCP原则
    * 当进行系统功能扩展的时候，如果动了之前稳定的程序，
    修改了之前的程序，之前的所有程序都需要进行重新测试。
    这是不想看到的！因为非常麻烦

# 依赖倒置原则(DIP原则)
    * 什么是依赖倒置原则
        面向接口编程，面向抽象编程，不要面向具体编程
    * 依赖倒置原则的目的
        降低程序的耦合度，提高扩展力
    * 什么叫做符合依赖倒置
        "上" 不依赖 "下"，就是符合
    * 什么叫做违背依赖倒置
        "上" 依赖 "下"，就是违背
        只要 "下"一改动，"上" 就会受到牵连

# 什么是控制反转
    * 控制反转：IOC(Inversion of Control)
    * 反转是什么意思呢？
        1.不在程序中使用硬编码的方式new对象(new对象我不管了，new对象的权利交出去)
        2.不在程序中采用硬编码的方式维护对象之间的关系(对象之间的关系维护权我不管了，交出去了)
    * 控制反转：是一种编程思想。或者叫做一种新型的设计模式...

# Spring框架
    * Spring框架实现了控制反转Ioc思想
        Spring框架可以帮你new对象
        Spring框架可以帮你维护对象和对象之间的关系
    * Spring是一个实现了IoC思想的容器
    * 控制反转的视线方式有多种
        比如：依赖转入(Dependency Injection,简称DI)
    * 依赖注入DI,又包括常见的两种方式：
        1.set注入: (执行set方法给属性赋值)
        2.构造注入: (执行构造方法给属性赋值)
    * 依赖转入 中 “依赖” 是什么意思？“注入”又是什么意思
        依赖：A对象和B对象之间的关系
        转入：是一种手段，通过这种手段，可以让A对象和B对象产生关系
        依赖注入:对象A和对象B之间的关系，要靠注入的手段来维护，
        而注入有包括set转入和构造注入